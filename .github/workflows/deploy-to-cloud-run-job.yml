---
name: Deploy to GCP Cloud Run Job

'on':
  push:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION || 'us-central1' }}
  REPOSITORY: ${{ secrets.GAR_REPOSITORY || 'go-vehicle-detail' }}
  SERVICE: go-vehicle-detail-job
  REGION: ${{ secrets.CLOUD_RUN_REGION || 'us-central1' }}
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker Auth
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build and Push Container
        run: |-
          GAR_REGISTRY="${{ env.GAR_LOCATION }}-docker.pkg.dev"
          PROJECT_ID="${{ env.PROJECT_ID }}"
          REPOSITORY="${{ env.REPOSITORY }}"
          SERVICE="${{ env.SERVICE }}"
          IMAGE_TAG="${{ github.sha }}"
          IMAGE_URI="${GAR_REGISTRY}/${PROJECT_ID}/${REPOSITORY}/${SERVICE}:${IMAGE_TAG}"
          docker build -t "${IMAGE_URI}" ./
          docker push "${IMAGE_URI}"

      - name: Deploy to Cloud Run Job
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            DB_CONN=${{ secrets.DB_CONN }}
          flags: '--set-cloudsql-instances=${{ secrets.CLOUD_SQL_INSTANCE }}'

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
